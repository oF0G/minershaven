-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local TextButton_2 = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Frame.Name = "Frame"
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 1.000
Frame.Position = UDim2.new(0.0528384298, 0, 0.640000045, 0)
Frame.Size = UDim2.new(0, 564, 0, 352)
Frame.Image = "rbxassetid://3570695787"
Frame.ScaleType = Enum.ScaleType.Slice
Frame.SliceCenter = Rect.new(100, 100, 100, 100)
Frame.SliceScale = 0.120

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.Position = UDim2.new(0.322695047, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.Position = UDim2.new(0.0833333433, 0, 0.235795468, 0)
TextButton.Size = UDim2.new(0, 200, 0, 50)
TextButton.Font = Enum.Font.SourceSans
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 14.000
TextButton.MouseButton1Down:Connect(function()
_G.autoRebirth = false;
_G.autoLayout2 = false;
_G.autoLayout1 = false;
local remotePath = game:GetService("ReplicatedStorage")
local Lay2 = false;

function L2 ()
    while _G.autoLayout2 == true do
            local args = {
                [1] = "Load",
                [2] = "Layout2"
            }

            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(args))

            
        break
    end
end


function L1()
    while _G.autoLayout1 == true do

        local args = {
            [1] = "Load",
            [2] = "Layout1"
        }

            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(args))

            wait()
        break
    end
end


    while _G.autoRebirth == true do
        local args = {
            [1] = 26
        }

        remotePath.Rebirth:InvokeServer(unpack(args))

        if Lay2 == true then
            L2()
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(10)
            local Lay2 = false


        if Lay2 == false then
            L1()
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            local Lay2 = true
        else
            remotePath.Rebirth:InvokeServer(unpack(args))







            end
        end
    end
end)

TextButton_2.Parent = TextButton
TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.Position = UDim2.new(1.34833336, 0, -0.00420452654, 0)
TextButton_2.Size = UDim2.new(0, 200, 0, 50)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.TextSize = 14.000
TextButton_2.MouseButton1Down:Connect(function()
_G.autoRebirth = true;
_G.autoLayout2 = true;
_G.autoLayout1 = true;
local remotePath = game:GetService("ReplicatedStorage")
local Lay2 = true;

function L2 ()
    while _G.autoLayout2 == true do
            local args = {
                [1] = "Load",
                [2] = "Layout2"
            }

            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(args))

            
        break
    end
end


function L1()
    while _G.autoLayout1 == true do

        local args = {
            [1] = "Load",
            [2] = "Layout1"
        }

            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(args))

            wait()
        break
    end
end


    while _G.autoRebirth == true do
        local args = {
            [1] = 26
        }

        remotePath.Rebirth:InvokeServer(unpack(args))

        if Lay2 == true then
            L2()
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(10)
            local Lay2 = true


        if Lay2 == true then
            L1()
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            local Lay2 = true
        else
            remotePath.Rebirth:InvokeServer(unpack(args))







            end
        end
    end
end)



































_G.autoRebirth = true;
_G.autoLayout2 = true;
_G.autoLayout1 = true;
local remotePath = game:GetService("ReplicatedStorage")
local Lay2 = true;

function L2 ()
    while _G.autoLayout2 == true do
            local args = {
                [1] = "Load",
                [2] = "Layout2"
            }

            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(args))

            
        break
    end
end


function L1()
    while _G.autoLayout1 == true do

        local args = {
            [1] = "Load",
            [2] = "Layout1"
        }

            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(args))

            wait()
        break
    end
end


    while _G.autoRebirth == true do
        local args = {
            [1] = 26
        }

        remotePath.Rebirth:InvokeServer(unpack(args))

        if Lay2 == true then
            L2()
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(10)
            local Lay2 = false


        if Lay2 == false then
            L1()
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            remotePath.Rebirth:InvokeServer(unpack(args))
            wait(5)
            local Lay2 = true
        else
            remotePath.Rebirth:InvokeServer(unpack(args))







        end
    end
end
